/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.107
 * Generated at: 2023-02-08 10:12:08 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class home_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("    <meta charset=\"UTF-8\">\n");
      out.write("\t<title>Home</title>\n");
      out.write("\t<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script>\n");
      out.write("\t<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery.form/4.3.0/jquery.form.min.js\"></script>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("    <form id=\"frm\" name=\"frm\" method=\"post\" action=\"/register/action\" enctype=\"multipart/form-data\">\n");
      out.write("        <input type=\"file\" name=\"file1\"/>\n");
      out.write("        <button type=\"button\" onclick=\"fnSumbit()\">전송</button>\n");
      out.write("    </form>\n");
      out.write("    \n");
      out.write("    <script>\n");
      out.write("\t    function fnSumbit() {\n");
      out.write("\t    \talert(\"sfsdf1222\");\n");
      out.write("\t    \tvar option = {\n");
      out.write("                //dataType : 'json', //JSON형태로 전달도 가능합니다.\n");
      out.write("                url: \"/register/action\",\n");
      out.write("                type: \"POST\", \n");
      out.write("                success: function(res){\n");
      out.write("                    alert(\"success\");\n");
      out.write("                \talert(res); //res Object안에 msg에는 결과 메시지가 담겨있습니다.\n");
      out.write("                },\n");
      out.write("                error: function(res){\n");
      out.write("                    alert(\"에러가 발생했습니다.\")\n");
      out.write("                }\n");
      out.write("            }\n");
      out.write("\t    \t\n");
      out.write("\t        $(\"#frm\").ajaxSubmit(option);\n");
      out.write("            /* $('#frm').submit(function() { //submit이 발생하면\n");
      out.write("            \talert(\"hi..\")\n");
      out.write("            \t$(this).ajaxSubmit(option); //옵션값대로 ajax비동기 동작을 시키고\n");
      out.write("                //return false; //기본 동작인 submit의 동작을 막아 페이지 reload를 막는다.\n");
      out.write("            }); */\n");
      out.write("            \n");
      out.write("\t    }\n");
      out.write("\t\t\n");
      out.write("\t </script> \n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
